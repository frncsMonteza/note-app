{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Acer\\\\Dropbox\\\\My PC (LAPTOP-SRHQSIT3)\\\\Desktop\\\\Workspace\\\\note-app\\\\notes-app-ui\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [selectedNote, setSelectedNote] = useState(null);\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/api/notes\");\n        const notes = await response.json();\n        setNotes(notes);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchNotes();\n  }, []);\n  const handleNoteClick = note => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n  const handleAddNote = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch(\"http://localhost:3000/api/notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      const newNote = await response.json();\n      setNotes([newNote, ...notes]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const handleUpdateNote = async event => {\n    event.preventDefault();\n    if (!selectedNote) {\n      return;\n    }\n    try {\n      const response = await fetch(`http://localhost:3000/api/notes/${selectedNote.id}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          content\n        })\n      });\n      const updatedNote = await response.json();\n      const updatedNotesList = notes.map(note => note.id === selectedNote.id ? updatedNote : note);\n      setNotes(updatedNotesList);\n      setTitle(\"\");\n      setContent(\"\");\n      setSelectedNote(null);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n  const deleteNote = async (event, noteId) => {\n    event.stopPropagation();\n    try {\n      await fetch(`http://localhost:3000/api/notes/${noteId}`, {\n        method: \"DELETE\"\n      });\n      const updateNotes = notes.filter(note => note.id !== noteId);\n      setNotes(updateNotes);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"note-form\",\n      onSubmit: event => selectedNote ? handleUpdateNote(event) : handleAddNote(event),\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: title,\n        onChange: event => setTitle(event.target.value),\n        placeholder: \"title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: content,\n        onChange: event => setContent(event.target.value),\n        placeholder: \"content\",\n        rows: 10,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), selectedNote ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notes-grid\",\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"note-item\",\n        onClick: () => handleNoteClick(note),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notes-header\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => deleteNote(event, note.id),\n            children: \"x\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: note.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"VB1fkClPu3jlvzuJZF8O8L7W3ug=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","App","_s","notes","setNotes","title","setTitle","content","setContent","selectedNote","setSelectedNote","fetchNotes","response","fetch","json","error","console","log","handleNoteClick","note","handleAddNote","event","preventDefault","method","headers","body","JSON","stringify","newNote","handleUpdateNote","id","updatedNote","updatedNotesList","map","e","handleCancel","deleteNote","noteId","stopPropagation","updateNotes","filter","className","children","onSubmit","value","onChange","target","placeholder","required","fileName","_jsxFileName","lineNumber","columnNumber","rows","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Acer/Dropbox/My PC (LAPTOP-SRHQSIT3)/Desktop/Workspace/note-app/notes-app-ui/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\ntype Note = {\n  id: number;\n  title: string;\n  content: string;\n};\n\nconst App = () => {\n  const [notes, setNotes] = useState<Note[]>([]);\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n\n  const [selectedNote, setSelectedNote] = useState<Note | null>(null);\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      try {\n        const response = await fetch(\"http://localhost:3000/api/notes\");\n        const notes: Note[] = await response.json();\n\n        setNotes(notes);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchNotes();\n  }, []);\n\n  const handleNoteClick = (note: Note) => {\n    setSelectedNote(note);\n    setTitle(note.title);\n    setContent(note.content);\n  };\n\n  const handleAddNote = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    try {\n      const response = await fetch(\"http://localhost:3000/api/notes\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          title,\n          content,\n        }),\n      });\n      const newNote = await response.json();\n\n      setNotes([newNote, ...notes]);\n      setTitle(\"\");\n      setContent(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleUpdateNote = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    if (!selectedNote) {\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `http://localhost:3000/api/notes/${selectedNote.id}`,\n        {\n          method: \"PUT\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({\n            title,\n            content,\n          }),\n        },\n      );\n\n      const updatedNote = await response.json();\n\n      const updatedNotesList = notes.map((note) =>\n        note.id === selectedNote.id ? updatedNote : note,\n      );\n\n      setNotes(updatedNotesList);\n      setTitle(\"\");\n      setContent(\"\");\n      setSelectedNote(null);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  const handleCancel = () => {\n    setTitle(\"\");\n    setContent(\"\");\n    setSelectedNote(null);\n  };\n\n  const deleteNote = async (event: React.MouseEvent, noteId: number) => {\n    event.stopPropagation();\n\n    try {\n      await fetch(`http://localhost:3000/api/notes/${noteId}`, {\n        method: \"DELETE\",\n      });\n      const updateNotes = notes.filter((note) => note.id !== noteId);\n\n      setNotes(updateNotes);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <div className=\"app-container\">\n      <form\n        className=\"note-form\"\n        onSubmit={(event) =>\n          selectedNote ? handleUpdateNote(event) : handleAddNote(event)\n        }\n      >\n        <input\n          value={title}\n          onChange={(event) => setTitle(event.target.value)}\n          placeholder=\"title\"\n          required\n        ></input>\n        <textarea\n          value={content}\n          onChange={(event) => setContent(event.target.value)}\n          placeholder=\"content\"\n          rows={10}\n          required\n        ></textarea>\n\n        {selectedNote ? (\n          <div className=\"edit-buttons\">\n            <button type=\"submit\">Save</button>\n            <button onClick={handleCancel}>Cancel</button>\n          </div>\n        ) : (\n          <button type=\"submit\">Add Note</button>\n        )}\n      </form>\n      <div className=\"notes-grid\">\n        {notes.map((note) => (\n          <div className=\"note-item\" onClick={() => handleNoteClick(note)}>\n            <div className=\"notes-header\">\n              <button onClick={(event) => deleteNote(event, note.id)}>x</button>\n            </div>\n            <h2>{note.title}</h2>\n            <p>{note.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAS,EAAE,CAAC;EAE9C,MAAM,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAc,IAAI,CAAC;EAEnED,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,CAAC;QAC/D,MAAMV,KAAa,GAAG,MAAMS,QAAQ,CAACE,IAAI,CAAC,CAAC;QAE3CV,QAAQ,CAACD,KAAK,CAAC;MACjB,CAAC,CAAC,OAAOY,KAAK,EAAE;QACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;MACpB;IACF,CAAC;IAEDJ,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,eAAe,GAAIC,IAAU,IAAK;IACtCT,eAAe,CAACS,IAAI,CAAC;IACrBb,QAAQ,CAACa,IAAI,CAACd,KAAK,CAAC;IACpBG,UAAU,CAACW,IAAI,CAACZ,OAAO,CAAC;EAC1B,CAAC;EAED,MAAMa,aAAa,GAAG,MAAOC,KAAsB,IAAK;IACtDA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DU,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBtB,KAAK;UACLE;QACF,CAAC;MACH,CAAC,CAAC;MACF,MAAMqB,OAAO,GAAG,MAAMhB,QAAQ,CAACE,IAAI,CAAC,CAAC;MAErCV,QAAQ,CAAC,CAACwB,OAAO,EAAE,GAAGzB,KAAK,CAAC,CAAC;MAC7BG,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;IAChB,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,MAAMc,gBAAgB,GAAG,MAAOR,KAAsB,IAAK;IACzDA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI,CAACb,YAAY,EAAE;MACjB;IACF;IAEA,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CACzB,mCAAkCJ,YAAY,CAACqB,EAAG,EAAC,EACpD;QACEP,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBtB,KAAK;UACLE;QACF,CAAC;MACH,CACF,CAAC;MAED,MAAMwB,WAAW,GAAG,MAAMnB,QAAQ,CAACE,IAAI,CAAC,CAAC;MAEzC,MAAMkB,gBAAgB,GAAG7B,KAAK,CAAC8B,GAAG,CAAEd,IAAI,IACtCA,IAAI,CAACW,EAAE,KAAKrB,YAAY,CAACqB,EAAE,GAAGC,WAAW,GAAGZ,IAC9C,CAAC;MAEDf,QAAQ,CAAC4B,gBAAgB,CAAC;MAC1B1B,QAAQ,CAAC,EAAE,CAAC;MACZE,UAAU,CAAC,EAAE,CAAC;MACdE,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC,CAAC,OAAOwB,CAAC,EAAE;MACVlB,OAAO,CAACC,GAAG,CAACiB,CAAC,CAAC;IAChB;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB7B,QAAQ,CAAC,EAAE,CAAC;IACZE,UAAU,CAAC,EAAE,CAAC;IACdE,eAAe,CAAC,IAAI,CAAC;EACvB,CAAC;EAED,MAAM0B,UAAU,GAAG,MAAAA,CAAOf,KAAuB,EAAEgB,MAAc,KAAK;IACpEhB,KAAK,CAACiB,eAAe,CAAC,CAAC;IAEvB,IAAI;MACF,MAAMzB,KAAK,CAAE,mCAAkCwB,MAAO,EAAC,EAAE;QACvDd,MAAM,EAAE;MACV,CAAC,CAAC;MACF,MAAMgB,WAAW,GAAGpC,KAAK,CAACqC,MAAM,CAAErB,IAAI,IAAKA,IAAI,CAACW,EAAE,KAAKO,MAAM,CAAC;MAE9DjC,QAAQ,CAACmC,WAAW,CAAC;IACvB,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EAED,oBACEf,OAAA;IAAKyC,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B1C,OAAA;MACEyC,SAAS,EAAC,WAAW;MACrBE,QAAQ,EAAGtB,KAAK,IACdZ,YAAY,GAAGoB,gBAAgB,CAACR,KAAK,CAAC,GAAGD,aAAa,CAACC,KAAK,CAC7D;MAAAqB,QAAA,gBAED1C,OAAA;QACE4C,KAAK,EAAEvC,KAAM;QACbwC,QAAQ,EAAGxB,KAAK,IAAKf,QAAQ,CAACe,KAAK,CAACyB,MAAM,CAACF,KAAK,CAAE;QAClDG,WAAW,EAAC,OAAO;QACnBC,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACTpD,OAAA;QACE4C,KAAK,EAAErC,OAAQ;QACfsC,QAAQ,EAAGxB,KAAK,IAAKb,UAAU,CAACa,KAAK,CAACyB,MAAM,CAACF,KAAK,CAAE;QACpDG,WAAW,EAAC,SAAS;QACrBM,IAAI,EAAE,EAAG;QACTL,QAAQ;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAEX3C,YAAY,gBACXT,OAAA;QAAKyC,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3B1C,OAAA;UAAQsD,IAAI,EAAC,QAAQ;UAAAZ,QAAA,EAAC;QAAI;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACnCpD,OAAA;UAAQuD,OAAO,EAAEpB,YAAa;UAAAO,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,gBAENpD,OAAA;QAAQsD,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAAQ;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CACvC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACPpD,OAAA;MAAKyC,SAAS,EAAC,YAAY;MAAAC,QAAA,EACxBvC,KAAK,CAAC8B,GAAG,CAAEd,IAAI,iBACdnB,OAAA;QAAKyC,SAAS,EAAC,WAAW;QAACc,OAAO,EAAEA,CAAA,KAAMrC,eAAe,CAACC,IAAI,CAAE;QAAAuB,QAAA,gBAC9D1C,OAAA;UAAKyC,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3B1C,OAAA;YAAQuD,OAAO,EAAGlC,KAAK,IAAKe,UAAU,CAACf,KAAK,EAAEF,IAAI,CAACW,EAAE,CAAE;YAAAY,QAAA,EAAC;UAAC;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CAAC,eACNpD,OAAA;UAAA0C,QAAA,EAAKvB,IAAI,CAACd;QAAK;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBpD,OAAA;UAAA0C,QAAA,EAAIvB,IAAI,CAACZ;QAAO;UAAA0C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClD,EAAA,CA3JID,GAAG;AAAAuD,EAAA,GAAHvD,GAAG;AA6JT,eAAeA,GAAG;AAAC,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}